#1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.

Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31    32         3    5    32        3    5    8    3
37    43         2    4    6         8    3    7    1
51    86        -1   64   -8

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). 
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем 
с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def _init_(self, list_of_list):
        self.list_of_list = list_of_list

    def _str_(self):
        return '\n'.join(map(str, self.list_of_list))

    def _add_(self, other):
        try:
            for i in range(len(self.list_of_list)):
                for i_2 in range(len(other.list_of_list[i])):
                    self.list_of_list[i][i_2] += other.list_of_list[i][i_2]
            return Matrix._str_(self)
        except Exception as exc:
            return "Матрицы имеют разные формы"


m_3x2 = Matrix([[31, 32], [37, 43], [51, 86]])
m_3x3 = Matrix([[3, 5, 32], [2, 4, 6], [-1, 64, -8]])
m_4x2 = Matrix([[3, 5, 8, 3], [8, 3, 7, 1]])
print("m_3x2:\n", m_3x2)
print("m_3x3:\n", m_3x3)
print("m_4x2:\n", m_4x2)
print("Сумма m_4x2:\n", m_4x2._add_(m_4x2))
